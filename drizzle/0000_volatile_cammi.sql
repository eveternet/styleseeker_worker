CREATE TABLE "search_ai_api_key" (
	"key_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_api_key_key_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_id" integer NOT NULL,
	"api_key" varchar(255) NOT NULL,
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"date_updated" timestamp with time zone,
	"expires_at" timestamp with time zone,
	"is_active" boolean DEFAULT true NOT NULL,
	"creator_clerk_user_id" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "search_ai_app" (
	"app_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_app_app_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_name" varchar(255) NOT NULL,
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"date_updated" timestamp with time zone,
	"organisation_id" integer NOT NULL,
	"subscription_plan" varchar(100),
	"billing_status" varchar(50),
	"plugin_name" varchar(100)
);
--> statement-breakpoint
CREATE TABLE "search_ai_organisation" (
	"organisation_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_organisation_organisation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"clerk_org_id" varchar(255) NOT NULL,
	"organisation_name" varchar(255) NOT NULL,
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"date_updated" timestamp with time zone,
	CONSTRAINT "search_ai_organisation_clerk_org_id_unique" UNIQUE("clerk_org_id")
);
--> statement-breakpoint
CREATE TABLE "search_ai_plugin_config_shopcada" (
	"app_id" integer PRIMARY KEY NOT NULL,
	"api_key" varchar(255) NOT NULL,
	"api_hostname" varchar(255) NOT NULL
);
--> statement-breakpoint
CREATE TABLE "search_ai_query" (
	"query_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_query_query_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_id" integer NOT NULL,
	"query_text" text NOT NULL,
	"ip_address" varchar(45),
	"user_agent" text,
	"session_id" varchar(255),
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "search_ai_query_result" (
	"result_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_query_result_result_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"query_id" integer NOT NULL,
	"product_ids_returned" jsonb,
	"response_time_ms" integer,
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "search_ai_usage_summary" (
	"summary_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_usage_summary_summary_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_id" integer NOT NULL,
	"query_count" integer NOT NULL,
	"date" date NOT NULL,
	"billing_period" varchar(50)
);
--> statement-breakpoint
CREATE TABLE "search_ai_vector" (
	"vector_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "search_ai_vector_vector_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_id" integer NOT NULL,
	"product_id" varchar(255) NOT NULL,
	"product_name" varchar(255),
	"embedding" real[],
	"date_created" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"date_updated" timestamp with time zone,
	CONSTRAINT "unique_app_product" UNIQUE("app_id","product_id")
);
--> statement-breakpoint
ALTER TABLE "search_ai_api_key" ADD CONSTRAINT "search_ai_api_key_app_id_search_ai_app_app_id_fk" FOREIGN KEY ("app_id") REFERENCES "public"."search_ai_app"("app_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_app" ADD CONSTRAINT "search_ai_app_organisation_id_search_ai_organisation_organisation_id_fk" FOREIGN KEY ("organisation_id") REFERENCES "public"."search_ai_organisation"("organisation_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_plugin_config_shopcada" ADD CONSTRAINT "search_ai_plugin_config_shopcada_app_id_search_ai_app_app_id_fk" FOREIGN KEY ("app_id") REFERENCES "public"."search_ai_app"("app_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_query" ADD CONSTRAINT "search_ai_query_app_id_search_ai_app_app_id_fk" FOREIGN KEY ("app_id") REFERENCES "public"."search_ai_app"("app_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_query_result" ADD CONSTRAINT "search_ai_query_result_query_id_search_ai_query_query_id_fk" FOREIGN KEY ("query_id") REFERENCES "public"."search_ai_query"("query_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_usage_summary" ADD CONSTRAINT "search_ai_usage_summary_app_id_search_ai_app_app_id_fk" FOREIGN KEY ("app_id") REFERENCES "public"."search_ai_app"("app_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "search_ai_vector" ADD CONSTRAINT "search_ai_vector_app_id_search_ai_app_app_id_fk" FOREIGN KEY ("app_id") REFERENCES "public"."search_ai_app"("app_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "api_key_app_idx" ON "search_ai_api_key" USING btree ("app_id");--> statement-breakpoint
CREATE INDEX "app_organisation_idx" ON "search_ai_app" USING btree ("organisation_id");--> statement-breakpoint
CREATE INDEX "query_app_idx" ON "search_ai_query" USING btree ("app_id");--> statement-breakpoint
CREATE INDEX "query_result_query_idx" ON "search_ai_query_result" USING btree ("query_id");--> statement-breakpoint
CREATE INDEX "usage_summary_app_idx" ON "search_ai_usage_summary" USING btree ("app_id");